{"version":3,"sources":["components/Cards.js","components/DoneImg.js","components/Items.js","components/ListItem.js","actions/actionItem.js","components/List.js","components/TodoForm.js","components/Modal.js","App.js","reducers/reducerItem.js","reportWebVitals.js","index.js"],"names":["Card","props","className","children","DoneImg","done","alt","src","Item","text","this","id","lastItem","Math","random","ListItem","dispatch","useDispatch","item","onClick","type","payload","List","items","useSelector","state","map","TodoForm","useState","setText","placeholder","onChange","event","t","target","value","preventDefault","addItem","onHideModal","Modal","e","showModal","SAVED_ITEMS","store","createStore","action","filter","actualState","localStorage","getItem","JSON","parse","loadState","subscribe","getState","setItem","stringify","App","setShowModal","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.412d4bb0.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Card(props){\r\n\r\n    return(\r\n        <div className={props.className ? `${props.className} card` : \"card\"}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card;","import React from \"react\";\r\n\r\n    function DoneImg(props){ // Define a function to render the done image\r\n        if(props.done){\r\n            return( <img alt=\"on\" src=\"/ToDoList/assets/on.png\"></img>)\r\n        } else{\r\n            return (<img alt=\"off\" src=\"/ToDoList/assets/off.png\"></img>)\r\n        }\r\n}\r\n\r\nexport default DoneImg;","class Item{\r\n\r\n    static lastItem = 0; // class variables, static is used to define a class variable that is shared by all instances of the class(obj/constructor).\r\n    // The use of class Variables out of the constructor is to not change the value of the variable for all instances of the class.\r\n\r\n    constructor(text){ // constructor is a special method that is called when a new object is created.\r\n        this.id = (Item.lastItem++) + (Math.random() * 1000); // this.id is a class variable, it is shared by all instances of the class.\r\n        this.text = text;\r\n        this.done = false\r\n    }\r\n}\r\n\r\nexport default Item;","import React from \"react\";\r\nimport Card from \"./Cards\";\r\nimport DoneImg from \"./DoneImg\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { deleteItem, changeDone } from \"../actions/actionItem\";\r\n\r\nfunction ListItem(props){\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    return(\r\n        <li>\r\n                    <Card className={props.item.done ? \"done item\" : \"item\"} >\r\n                        {props.item.text}\r\n                        <div>\r\n                            <button onClick={()=>{dispatch(changeDone(props.item.id))}}><DoneImg done={props.item.done}></DoneImg></button>\r\n                            <button onClick={()=>{dispatch(deleteItem(props.item.id))}}><img alt=\"delete\" src=\"/ToDoList/assets/bin.png\"></img></button>\r\n                        </div>\r\n                    </Card>\r\n                    </li>\r\n    )\r\n}\r\n\r\nexport default ListItem;","import Item from \"../components/Items\";\r\n\r\nexport function addItem(text){\r\n    const item = new Item(text);\r\n\r\n    return {type: \"ADD_ITEM\", payload:item}\r\n}\r\n\r\nexport function deleteItem(id){\r\n    return {type: \"DELETE_ITEM\", payload:id}\r\n}\r\n\r\nexport function changeDone(id){\r\n    return {type: \"CHANGE_DONE\", payload:id}\r\n}","import React from \"react\";\r\nimport ListItem from \"./ListItem\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction List(){\r\n\r\n    const items = useSelector(state=>state); // useSelector - A hook to access the redux store's state. This hook takes a selector function as an argument. The selector is called with the store state.\r\n\r\n    return(\r\n        <ul>\r\n            {items.map((item)=>{\r\n                return <ListItem key={item.id} item={item}></ListItem>})}\r\n        </ul> //'{()=>props.onDeleteItem(item)}' is an anonymous function, which takes an item as a parameter and calls the onDeleteItem function passing the item as a parameter to the parent component.\r\n    )\r\n}\r\n\r\nexport default List;","import React, {useState} from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addItem } from \"../actions/actionItem\";\r\n\r\nfunction TodoForm(props){\r\n\r\n    const [text, setText] = useState(\"\");\r\n    const dispatch = useDispatch();\r\n\r\n    function handleChange(event){ //this event is the input.\r\n        let t = event.target.value;\r\n        setText(t);\r\n    }\r\n\r\n    function onAddItem(event){ //this event is the button.\r\n        event.preventDefault(); //preventDefault() is used to prevent the default action of an element from happening.\r\n        if(text !== \"\"){\r\n            dispatch(addItem(text));\r\n            setText(\"\"); //setText(\"\") is used to clear the input after the item is added and this just happens when the button is clicked and if the input value is equal to the state(text).\r\n            props.onHideModal();\r\n        }\r\n    }\r\n\r\n    return(\r\n        <form>\r\n            <input type=\"text\" placeholder=\"Add Todo\" onChange={handleChange} value={text}/> {/* 'value={text}' because we want to keep the value of the input when we change the state */}\r\n            <button type=\"submit\" onClick={onAddItem}>Add</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default TodoForm;","import React from \"react\";\r\nimport Card from \"./Cards\";\r\n\r\nfunction Modal(props){\r\n\r\n    function hideModal(e){\r\n        let target = e.target;\r\n        if(target.id === \"modal\"){\r\n            props.onHideModal();\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div id=\"modal\" onClick={hideModal} className={props.showModal ? \"modal\" : \"modal hide\"}>\r\n            <Card className=\"card-modal\" >\r\n                {props.children}\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Modal;","import React, {useState} from \"react\";\r\nimport \"./App.css\";\r\nimport List from \"./components/List\";\r\nimport TodoForm from \"./components/TodoForm\";\r\nimport Modal from \"./components/Modal\";\r\nimport { createStore } from \"redux\";\r\nimport reducerItem from \"./reducers/reducerItem\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nconst SAVED_ITEMS = \"savedItem\";\r\n\r\nfunction persistState(state){ //save the state to localStorage when the state changes\r\n    localStorage.setItem(SAVED_ITEMS, JSON.stringify(state));\r\n}\r\nfunction loadState(){ //load the state from localStorage\r\n    const actualState = localStorage.getItem(SAVED_ITEMS);\r\n    if(actualState){\r\n        return JSON.parse(actualState);\r\n    } else{\r\n        return [];\r\n    }\r\n}\r\n\r\nconst store = createStore(reducerItem, loadState()); // Creating a store with the reducerItem function and passing the current state of the store(loadState)\r\n//Existe o loadState aí, pois você consegue colocar um estado inicial que tem \"uma importância superior\" ao estado iniciado no reducer(reducerItem). Isso se chama preloadedState, ele está passando um valor que ficará no lugar da lista vazia que é o listReducer.\r\n//Esta é a razão para ter um default state lá no reducerItem.\r\n//Let mais sobre isso em https://redux.js.org/usage/structuring-reducers/initializing-state\r\n\r\nstore.subscribe(()=>{persistState(store.getState())}); // Saving the state of the store in localStorage always when the state changes.\r\n\r\nfunction App(){\r\n    const [showModal, setShowModal] = useState(false);\r\n\r\n    function onHideModal(){\r\n        setShowModal(false);\r\n    }\r\n\r\n    return(\r\n        <div className=\"container\">\r\n            <Provider store={store}>\r\n                <header className=\"header\">\r\n                    <h1>Todo\r\n                    </h1>\r\n                    <button onClick={()=>setShowModal(true)} className=\"btn-modal\">+</button>\r\n                </header>\r\n                {/*<TodoForm onAddItem={onAddItem}/>  '{onAddItem}' is passed to the List component as a prop. From son to parent. */}\r\n                <List/> {/* '{onDeleteItem}' is passed to the List component as a prop. From son to parent. */}\r\n                <Modal showModal={showModal} onHideModal={onHideModal}><TodoForm onHideModal={onHideModal}/></Modal>\r\n            </Provider>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App;","export default function reducerItem(state = [], action){\r\n    switch (action.type) {\r\n        case \"ADD_ITEM\":\r\n            return [...state, action.payload];\r\n        case \"DELETE_ITEM\":\r\n            return state.filter(item=>{return item.id !== action.payload});\r\n        case \"CHANGE_DONE\":\r\n            return state.map(item=>{\r\n                if(item.id === action.payload){\r\n                    item.done = !item.done;\r\n                }\r\n                return item;\r\n            })\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}